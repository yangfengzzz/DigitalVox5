float compute_gradient(vec3 p, inout vec3 normal) {
    const float d = sample_distance(p);

    const vec2 eps = vec2(1e-2f, 0.0f);
    normal.x = sample_distance(p + eps.xyy) - d;
    normal.y = sample_distance(p + eps.yxy) - d;
    normal.z = sample_distance(p + eps.yyx) - d;
    normal = normalize(normal);

    return d;
}

// [USER DEFINED]
float sample_distance(vec3 p) {
    return p.y; //sdSphere(p - vec3(30.0f, 110.0f, 0.0f), 64.0);
}