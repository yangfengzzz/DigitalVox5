# Copyright (c) 2020-2021, Arm Limited and Contributors
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 the "License";
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cmake_minimum_required(VERSION 3.12)

project(DigitalVox)

# create output folder
file(MAKE_DIRECTORY output)

# Add path for local cmake scripts
list(APPEND CMAKE_MODULE_PATH
    ${CMAKE_CURRENT_SOURCE_DIR}/bldsys/cmake
    ${CMAKE_CURRENT_SOURCE_DIR}/bldsys/cmake/module)

# Precompiled header macro. Parameters are source file list and filename for pch cpp file.
macro(vulkan_samples_pch SRCS PCHCPP)
    if(MSVC AND CMAKE_GENERATOR MATCHES "^Visual Studio")
        set(PCH_NAME "$(IntDir)\\pch.pch")
        # make source files use/depend on PCH_NAME
        set_source_files_properties(${${SRCS}} PROPERTIES COMPILE_FLAGS "/Yupch.h /FIpch.h /Fp${PCH_NAME} /Zm300" OBJECT_DEPENDS "${PCH_NAME}")
        # make PCHCPP file compile and generate PCH_NAME
        set_source_files_properties(${PCHCPP} PROPERTIES COMPILE_FLAGS "/Ycpch.h /Fp${PCH_NAME} /Zm300" OBJECT_OUTPUTS "${PCH_NAME}")
        list(APPEND ${SRCS} "${PCHCPP}")
    endif()
endmacro(vulkan_samples_pch)

include(utils)
include(global_options)
include(sample_helper)
include(check_atomic)

####################################################
find_package(MKL CONFIG REQUIRED)
message(STATUS "${MKL_IMPORTED_TARGETS}") #Provides available list of targets based on input

find_package(TBB REQUIRED)

# Add third party libraries
add_subdirectory(third_party)

# Add math library
add_subdirectory(vox.math)
add_subdirectory(test.math)

# Add render framework
add_subdirectory(vox.render)
add_subdirectory(apps)

# Add editor
add_subdirectory(vox.editor)
add_subdirectory(editor)

################## Arche source #################
add_subdirectory(arc.base)
add_subdirectory(test.base)

add_subdirectory(arc.geometry)
add_subdirectory(test.geometry)

add_subdirectory(arc.io)
add_subdirectory(test.io)

add_subdirectory(arc.core)
add_subdirectory(test.core)